import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.31'
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'application'
}

group 'org.kryptonmc'
version '0.10'

application.mainClassName 'org.kryptonmc.krypton.KryptonKt'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

    implementation 'io.netty:netty-all:4.1.59.Final'
    implementation 'io.netty:netty-transport-native-epoll:4.1.59.Final'
    implementation 'io.netty:netty-transport-native-kqueue:4.1.59.Final'
    implementation 'io.netty.incubator:netty-incubator-transport-native-io_uring:0.0.4.Final'

    implementation 'net.kyori:adventure-api:4.6.0'
    implementation 'net.kyori:adventure-extra-kotlin:4.6.0'
    implementation 'net.kyori:adventure-text-serializer-gson:4.6.0'
    implementation 'net.kyori:adventure-text-serializer-legacy:4.6.0'
    implementation 'net.kyori:adventure-nbt:4.6.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0'
    implementation 'com.moandjiezana.toml:toml4j:0.7.2'

    // logging
    api 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    // used for querying the Mojang API in authentication
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // caching
    implementation 'com.github.ben-manes.caffeine:caffeine:2.8.8'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs = [
                "-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi",
                "-Xopt-in=kotlin.ExperimentalUnsignedTypes",
                "-Xinline-classes"
        ]
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

shadowJar {
    archiveFileName.set("Krypton-${project.version}.jar")
}

processResources {
    filter ReplaceTokens, tokens: ["version": project.version.toString()]
}